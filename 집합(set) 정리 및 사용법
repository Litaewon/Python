# 단일 변수에 여러 항목을 저장

# set() 함수 사용
set_example = set([1, 2, 3, 4, 5])
print(set_example)
{1, 2, 3, 4, 5}

set_example = {1, 2, 3, 4, 5}
print(set_example)
{1, 2, 3, 4, 5}

set_example = {1, 2, 3, 4,5}
for i in set_example:
	print(i)
1
2
3
4
5

# in 연산자를 이용한 요소 확인
fruits = {"apple", "banana", "cherry"}
print("apple" in fruits)
print("grape" in fruits)
True
False

# add() 메서드 - 단일 요소를 추가
set_example = {1, 2, 3, 4, 5}
set_example.add(6)
print(set_example)
{1, 2, 3, 4, 5, 6}

# update() 메서드 - 여러 요소를 추가
set_example = {1, 2, 3, 4, 5}
set_example.update([6, 7, 8])
print(set_example)
{1, 2, 3, 4, 5, 6, 7, 8}

# remove() 메서드 - 특정 요소를 제거 / 집합에 없으면 KeyError 발생
set_example = {1, 2, 3, 4, 5}
set_example.remove(5)
print(set_example)
{1, 2, 3, 4}

# discard() 메서드 - 특정 요소를 제거 / 요소가 세트에 존재하지 않는 경우 KeyError 발생 x
set_example = {1, 2, 3, 4, 5}
set_example.discard(6)
print(set_example)
{1, 2, 3, 4, 5}

# pop() 메서드 - 임의의 요소를 제거하는 데 사용 / 집합은 순서가 없기에 임의의 요소가 제거되는 것이라고 설명 가능
set_example = {1, 2, 3, 4, 5}
set_example.pop()
print(set_example)
{2, 3, 4, 5}

# 합집합 - union() 메서드 or | 연산자   (or)
set_a = {1, 2, 3, 4, 5}
set_b = {4, 5, 6, 7, 8}
set_c = set_a.union(set_b)
print(set_c)
{1, 2, 3, 4, 5, 6, 7, 8}

set_c = set_a | set_b
print(set_c)
{1, 2, 3, 4, 5, 6, 7, 8}

# 교집합 - Intersection() or & 연산자  (and)
set_a = {1, 2, 3, 4, 5}
set_b = {4, 5, 6, 7, 8}
set_c = set_a.intersection(set_b)
print(set_c)
{4, 5}

set_c = set_a & set_b
print(set_c)
{4, 5}

# 차집합 - difference() or - 연산자 
set_a = {1, 2, 3, 4, 5}
set_b = {4, 5, 6, 7, 8}
set_c = set_a.difference(set_b)
print(set_c)
{1, 2, 3}

set_c = set_a - set_b
print(set_c)
{1, 2, 3}

# 대칭 차집합 - symmetric_difference() 메서드 or ^ 연산자   (공통 요소 제외)
set_a = {1, 2, 3, 4, 5}
set_b = {4, 5, 6, 7, 8}
set_c = set_a.symmetric_difference(set_b)
print(set_c)
{1, 2, 3, 6, 7, 8}

set_c = set_a ^ set_b
print(set_c)
{1, 2, 3, 6, 7, 8}

# set() VS frozenset()
set() : 가변 집합을 생성   / frozenset() : 불변 집합을 생성
set_example = set([1, 2, 3, 4, 5])
set_example.add(6)
print(set_example)
{1, 2, 3, 4, 5, 6}

frozenset_example = frozenset([1, 2, 3, 4, 5])
frozenset_example.add(6)
AttributeError: 'frozenset' object has no attribute 'add'
